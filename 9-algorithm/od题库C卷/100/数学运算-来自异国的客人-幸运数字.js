/**
 * @题目描述
 * 有位客人来自异国，在该国使用m进制计数。
 * 该客人有个幸运数字n(n<m)，每次购物时，其总是喜欢计算本次支付的花费(折算为异国的价格后)中存在多少幸运数字。
 * 问: 当其购买一个在我国价值k的产品时，其中包含多少幸运数字?
 *
 * @输入描述
 * 第一行输入为 k,n,m。
 * 其中:
 * ·k表示 该客人购买的物品价值(以十进制计算的价格)
 * ·n表示 该客人的幸运数字
 * ·m表示 该客人所在国度的采用的进制
 *
 * @输出描述
 * 输出幸运数字的个数，行末无空格。当输入非法内容时，输出0
 *
 * @用例1
 * 输入:
 * 10 2 4
 * 输出:
 * 2
 * 说明:
 * 10用4进制表示时为22，同时，异国客人的幸运数字是2，故而此处输出为2，表示有2个幸运数字
 *
 * @用例2
 * 输入:
 * 10 4 4
 * 输出:
 * 0
 * 说明:
 * 此时客人的幸运数字为4，但是由于该国最大为4进制，故而在该国的进制下不可能出现幸运数字，故而返回0
 */

/**
 * 考察点：
 * 1.js中进制之间转换的方法
 */

const demo = (k, n, m) => {
  if (n >= m) return 0;
  // 把k转为m进制
  const mBinaryStr = parseInt(k, 10).toString(m);
  console.log(mBinaryStr);
  return [...mBinaryStr].filter((it) => parseInt(it, 10) === n).length;
};

// 测试用例 1: 包含多个幸运数字
console.log(demo(10, 2, 4) === 2);

// 测试用例 2: 幸运数字不可能出现
console.log(demo(10, 4, 4) === 0);

// 测试用例 3: 没有幸运数字
console.log(demo(8, 7, 10) === 0);

// 测试用例 4: 价值k为0
console.log(demo(0, 2, 4) === 0);

// 测试用例 5: 幸运数字在进制表示中出现多次
console.log(demo(255, 5, 16) === 0);

// 测试用例 6: 幸运数字是0，在m进制表示中多次出现
console.log(demo(256, 0, 16) === 2);

// 测试用例 7: 进制转换后数字全是幸运数字
console.log(demo(63, 3, 4) === 3);
