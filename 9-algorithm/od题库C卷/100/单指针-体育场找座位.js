/**
 * @题目描述
 * 在一个大型体育场内举办了一场大型活动，由于疫情防控的需要，要求每位观众的必须间隔至少一个空位才允许落座。
 * 现在给出一排观众座位分布图，座位中存在已落座的观众，请计算出，在不移动现有观众座位的情况下，最多还能坐下多少名观众。
 *
 * @输入描述
 * 一个数组，用来标识某一排座位中，每个座位是否已经坐人。0表示该座位没有坐人，1表示该座位已经坐人。
 *
 * @输出描述
 * 整数，在不移动现有观众座位的情况下，最多还能坐下多少名观众。
 *
 * @示例1
 * 输入：
 * 10001
 *
 * 输出：
 * 1
 *
 * @示例2
 * 输入：
 * 0101
 *
 * 输出：
 * 0
 */

const demo = (seats) => {
  let maxCount = 0; // 最多还能坐下多少名观众

  for (let i = 0; i < seats.length; i++) {
    // !! 当前位置可以坐的条件：当前位置空 && （且前后位置也必须为空 || 不存在（即数组两端））
    const canSit =
      seats[i] === 0 &&
      (i === 0 || seats[i - 1] === 0) &&
      (i === seats.length - 1 || seats[i + 1] === 0);

    if (canSit) {
      maxCount++; // 可以坐人
      seats[i] = 1; // 更新位置状态为已坐人
    }
  }

  return maxCount;
};

console.log(demo([1, 0, 0, 0, 1])); // 应输出 1
console.log(demo([0, 1, 0, 1])); // 应输出 0
