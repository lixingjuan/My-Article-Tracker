/**
 * @题目描述
 * 为了达到新冠疫情精准防控的需要，为了避免全员核酸检测带来的浪费，需要精准圈定可能被感染的人群。
 * 现在根据传染病流调以及大数据分析，得到了每个人之间在时间、空间上是否存在轨迹的交叉。
 * 现在给定一组确诊人员编号(X1,X2,X3...Xn) 在所有人当中，找出哪些人需要进行核酸检测，输出需要进行核酸检测的人数。（注意:确诊病例自身不需要再做核酸检测)
 * 需要进行核酸检测的人，是病毒传播链条上的所有人员，即有可能通过确诊病例所能传播到的所有人。
 * 例如:A是确诊病例，A和B有接触、B和C有接触 C和D有接触，D和E有接触。那么B、C、D、E都是需要进行核酸检测的
 *
 * @输入描述
 * 第一行为总人数N
 * 第二行为确诊病例人员编号 (确证病例人员数量 < N) ，用逗号隔开
 * 接下来N行，每一行有N个数字，用逗号隔开，其中第i行的第个j数字表名编号i是否与编号j接触过。0表示没有接触，1表示有接触
 *
 * @输出描述
 * 输出需要做核酸检测的人数
 *
 * @补充说明
 * 人员编号从0开始
 * 0 < N < 100
 *
 * @示例1
 * 输入：
 * 5
 * 1,2
 * 1,1,0,1,0
 * 1,1,0,0,0
 * 0,0,1,0,1
 * 1,0,0,1,0
 * 0,0,1,0,1
 *
 * 输出
 * 3
 *
 * 说明：
 * 编号为1、2号的人员为确诊病例1号与0号有接触，0号与3号有接触，2号54号有接触。所以，需要做核酸检测的人是0号、3号、4号,总计3人要进行核酸检测。
 */

const demo = (target, grid) => {
  const targetPerson = target.split(",").map(Number);
  const n = grid[0].length;
  const resultSet = new Set();

  // 定义 DFS 函数，用于从指定起始点开始遍历所有接触的人员
  // 参数i是行，j表示列
  const dfs = (i) => {
    // 遍历每一列，找所有符合条件的：密接&没有处理过该元素
    for (let j = 0; j < n; j++) {
      // 已经确诊，而且没有记录过
      if (grid[i][j] === 1 && !resultSet.has(j)) {
        resultSet.add(j);
        // 找到密接，需要对密接再进行深搜
        dfs(j);
      }
    }
  };

  // 1. 处理确诊人员之间的接触情况
  targetPerson.forEach((person) => {
    dfs(person); // 开始 DFS 遍历所有与该确诊人员接触的人员
  });

  // 移除已经确诊的人员
  targetPerson.forEach((person) => {
    resultSet.delete(person);
  });

  // 返回结果集中的人数
  return resultSet.size;
};

// 示例调用
console.log(
  demo("1,2", [
    [1, 1, 0, 1, 0],
    [1, 1, 0, 0, 0],
    [0, 0, 1, 0, 1],
    [1, 0, 0, 1, 0],
    [0, 0, 1, 0, 1],
  ]) === 3
);

// 测试用例 1: 小型群体，确诊病例直接接触少数人
console.log(
  demo("0", [
    [1, 1, 0],
    [1, 1, 1],
    [0, 1, 1],
  ]) === 2
);
// 说明：只有编号为0的确诊病例，它直接接触了编号为1的个体，编号为1的个体又接触了编号为2的个体。

// 测试用例 2: 确诊病例为多个，形成传播链
console.log(
  demo("0,1", [
    [1, 1, 0, 0],
    [1, 1, 1, 0],
    [0, 1, 1, 1],
    [0, 0, 1, 1],
  ]) === 2
);
// 说明：编号为0和1的个体为确诊病例，编号为2和3的个体因为与确诊病例有间接接触而需要检测。

// 测试用例 3: 群体中没有形成传播链
console.log(
  demo("2", [
    [1, 0, 0],
    [0, 1, 0],
    [0, 0, 1],
  ]) === 0
);
// 说明：尽管有确诊病例，但由于没有与其他个体的接触，因此没有其他人需要进行检测。

// 测试用例 4: 所有人都需要进行核酸检测
console.log(
  demo("0", [
    [1, 1, 1, 1],
    [1, 1, 1, 1],
    [1, 1, 1, 1],
    [1, 1, 1, 1],
  ]) === 3
);
// 说明：确诊病例与所有其他个体都有接触，因此除了确诊病例本身外，所有人都需要进行核酸检测。
